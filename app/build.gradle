plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

String majorAndMinorVersion = "1.5"
Integer patchVersionCode = 1

android {
    compileSdkVersion 33
    defaultConfig {
        applicationId "edu.artic"
        minSdkVersion 24
        targetSdkVersion 33
        multiDexEnabled true
        versionCode(patchVersionCode + 1500)
        versionName "$majorAndMinorVersion.$patchVersionCode"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        buildConfigField "String", "VERSION_NAME_FOR_DISPLAY", "VERSION_NAME"
        resValue "string", "com.crashlytics.android.build_id", "$majorAndMinorVersion.$patchVersionCode"
    }

    signingConfigs {
        release {
            storeFile file(envVariable("keystore", true) ?: "DUMMY")
            storePassword envVariable("keystore_password", true)
            keyAlias envVariable("keystore_alias", true)
            keyPassword envVariable("keystore_alias_password", true)
        }
    }

    productFlavors.all {
        ext.buildMetadata = null
    }

    productFlavors {
        store {
            if (project.hasProperty('build_number')) {
                /**
                 * This is typically the build number produced by the CI service.
                 */
                buildMetadata = project.getProperty('build_number')
            } else {
                buildMetadata = 'SNAPSHOT'
            }
        }

        rental {
            applicationIdSuffix ".rental"
            versionNameSuffix "-rental"

            buildMetadata = "RENTAL"
        }
    }

    buildTypes {
        debug {
            buildConfigField "String", "FB_APPLICATION_ID", "\"${envVariable("fb_application_id", false)}\""
            buildConfigField "String", "FB_API_KEY", "\"${envVariable("fb_api_key", false)}\""
            buildConfigField "String", "GA_TRACKING_ID", "\"${envVariable("ga_tracking_id", false)}\""
            buildConfigField "String", "GCM_SENDER_ID", "\"${envVariable("gcm_sender_id", false)}\""
            buildConfigField "String", "FB_PROJECT_ID", "\"${envVariable("fb_project_id", false)}\""
            buildConfigField "String", "FB_STORAGE_BUCKET", "\"${envVariable("fb_storage_bucket", false)}\""
            productFlavors {
                all {
                    buildConfigField "String", "VERSION_NAME_FOR_DISPLAY", "\"$majorAndMinorVersion.$patchVersionCode+$buildMetadata\""
                }
            }
        }
        release {
            buildConfigField "String", "FB_APPLICATION_ID", "\"${envVariable("fb_application_id", true)}\""
            buildConfigField "String", "FB_API_KEY", "\"${envVariable("fb_api_key", true)}\""
            buildConfigField "String", "GA_TRACKING_ID", "\"${envVariable("ga_tracking_id", true)}\""
            buildConfigField "String", "GCM_SENDER_ID", "\"${envVariable("gcm_sender_id", true)}\""
            buildConfigField "String", "FB_PROJECT_ID", "\"${envVariable("fb_project_id", true)}\""
            buildConfigField "String", "FB_STORAGE_BUCKET", "\"${envVariable("fb_storage_bucket", true)}\""
            buildConfigField "String", "VERSION_NAME_FOR_DISPLAY", "VERSION_NAME"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    namespace 'edu.artic'
}

dependencies {

    implementation project(':access_card')
    implementation project(':analytics')
    implementation project(':audio')
    implementation project(':base')
    implementation project(':content_listing')
    implementation project(':db')
    implementation project(':details')
    implementation project(':image')
    implementation project(':info')
    implementation project(':location')
    implementation project(':location_ui')
    implementation project(':localization_ui')
    implementation project(':map')
    implementation project(':media')
    implementation project(':media_ui')
    implementation project(':membership')
    implementation project(':message')
    implementation project(':search')
    implementation project(':splash')
    implementation project(':tour_manager')
    implementation project(':ui')
    implementation project(':viewmodel')
    implementation project(':welcome')

    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation libs.threeten
    implementation libs.progress_interceptor

    implementation platform('com.google.firebase:firebase-bom:31.2.1')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'

    //The following four lines enable our usage of dagger2 dependency injection
    implementation libs.dagger
    kapt libs.dagger_compiler
    implementation libs.dagger_android
    kapt libs.dagger_android_compiler

    // Test-only dependencies below this point
    testImplementation 'junit:junit:4.12'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0'
    // Our tests use the standard Java variant of the 310 backport..
    testImplementation('org.threeten:threetenbp:1.3.7') {
        // ...so we need to explicitly exclude the Android variant here
        exclude group: 'com.jakewharton.threetenabp', module: 'threetenabp'
    }
}
